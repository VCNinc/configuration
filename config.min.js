var{ModularTrustRoot:e}=require("@modular/smcc-core");class o{static async new(r){const t=new o;if(1!==arguments.length)throw new RangeError("ModularConfiguration.new expects exactly one argument");if("object"!=typeof r||null===r)throw new TypeError("Options must be an object");if(t.dohEndpoints=[],r.dohEndpoints.forEach(e=>{if(!/^(https:\/\/)[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,}(:[0-9]{1,5})?(\/.*)?$/g.test(e))throw new TypeError("Invalid DNS over HTTPS (DoH) endpoint: "+e);t.dohEndpoints.push(e)}),t.dnsSeeds=[],r.dnsSeeds.forEach(e=>{if(!/^([a-z0-9]+\.|-)+([a-z0-9]+\.)+$/g.test(e))throw new TypeError("Invalid DNS seed: "+e);t.dnsSeeds.push(e)}),t.httpsSeeds=[],r.httpsSeeds.forEach(e=>{if(!/^(https:\/\/)[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,}(:[0-9]{1,5})?(\/.*)?$/g.test(e))throw new TypeError("Invalid HTTPS seed: "+e);t.httpsSeeds.push(e)}),!Number.isInteger(r.networkModulus))throw new TypeError("Network modulus must be an integer");if(r.networkModulus<=0)throw new RangeError("Network modulus must be positive");if(Math.log2(r.networkModulus)%1!=0)throw new TypeError("Network modulus must be a power of 2");if(t.networkModulus=r.networkModulus,!Number.isInteger(r.sectorMapSize))throw new TypeError("Sector map size must be an integer");if(r.sectorMapSize<=0)throw new RangeError("Sector map size must be positive");if(Math.log(r.sectorMapSize)/Math.log(4)%1!=0)throw new RangeError("Sector map size must be a power of 4");if(t.sectorMapSize=r.sectorMapSize,!Number.isInteger(r.logoSectorMapSize))throw new TypeError("Logo sector map size must be an integer");if(r.logoSectorMapSize<=0)throw new RangeError("Logo sector map size must be positive");if(Math.log(r.logoSectorMapSize)/Math.log(4)%1!=0)throw new RangeError("Logo sector map size must be a power of 4");if(t.logoSectorMapSize=r.logoSectorMapSize,!Number.isInteger(r.iconSectorMapSize))throw new TypeError("Icon sector map size must be an integer");if(r.iconSectorMapSize<=0)throw new RangeError("Icon sector map size must be positive");if(Math.log(r.iconSectorMapSize)/Math.log(4)%1!=0)throw new RangeError("Icon sector map size must be a power of 4");return t.iconSectorMapSize=r.iconSectorMapSize,t.root=await e.new(r.root.fingerprint,r.root.publicKeyArmored),t}}module.exports.ModularConfiguration=o;